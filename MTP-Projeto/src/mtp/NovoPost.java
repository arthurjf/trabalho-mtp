/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mtp;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author filip
 */
public class NovoPost extends javax.swing.JFrame {

    private Usuario usuario;

    public NovoPost(Usuario novoUsuario) {
        initComponents();
        MyUtil.setarCorDaJanela(this, new Color(240, 240, 240));
        setLocationRelativeTo(null);
        this.usuario = novoUsuario;
        checarArquivoSelecionado();
        checarTextoTamanho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoTexto = new javax.swing.JTextArea();
        buttonSelecionarImagem = new javax.swing.JLabel();
        labelTextoTamanho = new javax.swing.JLabel();
        buttonRemoverImagem = new javax.swing.JButton();
        labelTextoImagem = new javax.swing.JLabel();
        buttonPostar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Novo Post");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel1.setText("Texto:");

        campoTexto.setColumns(20);
        campoTexto.setLineWrap(true);
        campoTexto.setRows(5);
        campoTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoTextoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(campoTexto);

        buttonSelecionarImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mtp/imagens/14611 (1).png"))); // NOI18N
        buttonSelecionarImagem.setToolTipText("Inserir imagem no post");
        buttonSelecionarImagem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSelecionarImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSelecionarImagemMouseClicked(evt);
            }
        });

        labelTextoTamanho.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        labelTextoTamanho.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTextoTamanho.setText("0/140");

        buttonRemoverImagem.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        buttonRemoverImagem.setText("Remover imagem");
        buttonRemoverImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverImagemActionPerformed(evt);
            }
        });

        labelTextoImagem.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        labelTextoImagem.setText("nome imagem");

        buttonPostar.setBackground(new java.awt.Color(0, 115, 255));
        buttonPostar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonPostar.setForeground(new java.awt.Color(255, 255, 255));
        buttonPostar.setText("Postar");
        buttonPostar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonPostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPostarActionPerformed(evt);
            }
        });

        buttonCancelar.setBackground(new java.awt.Color(117, 117, 117));
        buttonCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelar.setText("Cancelar");
        buttonCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSelecionarImagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTextoImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(labelTextoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonRemoverImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonPostar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(444, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonSelecionarImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTextoImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelTextoTamanho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonRemoverImagem)
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonPostar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    File arquivo = null;

    private void buttonSelecionarImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSelecionarImagemMouseClicked
        JFileChooser fc = new JFileChooser();
        int retorno = fc.showOpenDialog(this);
        File novoArquivo = fc.getSelectedFile();
        if (retorno == JFileChooser.APPROVE_OPTION) {
            try {
                MyUtil.filtrarArquivoParaImagem(novoArquivo);
                arquivo = novoArquivo;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Imagem não encontrada ou formato incompatível", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        checarArquivoSelecionado();
    }//GEN-LAST:event_buttonSelecionarImagemMouseClicked

    /* Método que verifica se o arquivo de imagem foi selecionado */
    private void checarArquivoSelecionado() {
        if (arquivo != null) {
            buttonRemoverImagem.setVisible(true);
            buttonRemoverImagem.enable(true);
            labelTextoImagem.setText(arquivo.getName());
        } else {
            buttonRemoverImagem.setVisible(false);
            buttonRemoverImagem.enable(false);
            labelTextoImagem.setText("");
        }
    }

    /* Método que retorna se um texto é muito grande ou não */
    private boolean textoMuitoGrande() {
        return (campoTexto.getText().length() > 140) ? true : false;
    }

    private void buttonRemoverImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverImagemActionPerformed
        arquivo = null;
        checarArquivoSelecionado();
    }//GEN-LAST:event_buttonRemoverImagemActionPerformed

    /* Método que checa e atualiza o texto do tamanho do texto */
    private void checarTextoTamanho() {
        labelTextoTamanho.setText(Integer.toString(campoTexto.getText().length()) + "/140");
        if (textoMuitoGrande()) {
            labelTextoTamanho.setForeground(Color.RED);
        } else {
            labelTextoTamanho.setForeground(Color.BLACK);
        }
    }

    /* Método que é chamado quando uma tecla é pressionada para checar o tamanho do texto */
    private void campoTextoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTextoKeyTyped
        checarTextoTamanho();
    }//GEN-LAST:event_campoTextoKeyTyped

    private void buttonPostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPostarActionPerformed
        if (campoTexto.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo de texto não pode estar vazio!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (textoMuitoGrande()) {
                JOptionPane.showMessageDialog(null, "O texto não pode ser maior que 140 caracteres!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                Conexao conexao = new Conexao();
                try {
                    conexao.cadastrarPost(campoTexto.getText(), this.usuario.getId(), arquivo);
                    JOptionPane.showMessageDialog(null, "Seu post foi publicado com sucesso!", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                    new TelaPrincipal(this.usuario).setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Não foi possível cadastrar seu post...", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_buttonPostarActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        dispose();
        new TelaPrincipal(this.usuario).setVisible(true);
    }//GEN-LAST:event_buttonCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonPostar;
    private javax.swing.JButton buttonRemoverImagem;
    private javax.swing.JLabel buttonSelecionarImagem;
    private javax.swing.JTextArea campoTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelTextoImagem;
    private javax.swing.JLabel labelTextoTamanho;
    // End of variables declaration//GEN-END:variables
}
